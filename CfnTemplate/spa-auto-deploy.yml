AWSTemplateFormatVersion: '2010-09-09'
Description: 'Create resources for automatic deployment of SPA'


Parameters:
  Env:
    Type: String
    Default: itg
    Description: 'Set Enter Environment for SPA'

  DeployAccountId:
    Type: String
    Default: 678901234567
    AllowedValues:
      - 678901234567
    Description: 'Set Enter Account ID to deploy SPA'
  
  SpaName:
    Type: String
    Default: my-app
    AllowedValues:
      - my-app
      - my-app2
    Description: 'Set Enter Repository name'

  BranchName:
    Type: String
    Default: integration
    AllowedValues:
      - integration
    Description: 'Set Enter branch name'

Resources:
  # create IAM role for pipeline
  SpaPipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: codepipeline.amazonaws.com
          Action: sts:AssumeRole
      Policies:
        - PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:*
                Resource:
                 - !Sub arn:aws:s3:::${Env}-auto-deploy-${SpaName}
                 - !Sub arn:aws:s3:::${Env}-auto-deploy-${SpaName}/*
              - Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                Resource: 
                  - '*'
          PolicyName: !Sub ${Env}-auto-deploy-${SpaName}-for-pipeline
      RoleName: !Sub ${Env}-auto-deploy-${SpaName}-for-pipeline
  # create IAM role for codebuild project
  SpaCodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
          Action: sts:AssumeRole
      Policies:
        - PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
              - logs:*
              - cloudfront:CreateInvalidation
              Resource: '*'
            - Effect: Allow
              Action:
               - s3:*
              Resource: '*'
        - PolicyName: !Sub ${Env}-auto-deploy-${SpaName}-for-codebuild
      RoleName: !Sub ${Env}-auto-deploy-${SpaName}-for-codebuild
  # Create artifact S3 bucket
  SpaSourceS3:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${Env}-auto-deploy-${SpaName}
  SpaCodebuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Description: 'Build a SPA'
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: 'aws/codebuild/nodejs:8.11.0'
      Name: !Sub ${Env}-auto-deploy-${SpaName}
      ServiceRole: !GetAtt SpaCodeBuildRole.Arn
      Source:
        Type: CODEPIPELINE
        buildspec: !Sub codebuild/buildspec.${Env}.yml
  SpaPipaline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Type: S3
        Location: !Sub ${Env}-auto-deploy-${SpaName}
      Name: !Sub ${Env}-auto-deploy-{SpaName}
      RoleArn: !GetAtt SpaPipelineRole.Arn
      Stages:
        Name: 'Source'
        Actions:
        -
          ActionsTypeId:
            Category: Source
            Owner: AWS
            Provider: CodeCommit
            Version: 1
          Configuration:
            BranchName: !Sub ${BranchName}
            RepositoryName: !Sub ${SpaName}
          OutputArtifacts:
            - Name: SpaSourceCode
          RunOrder: 1
      Stages:
        Name: build
        Actions:
        -
          ActionsTypeId:
            Category: Build
            Owner: AWS
            Provider: CodeBuild
            Version: 1
          Configuration:
            ProjectName: !Ref SpaCodebuild
          InputArtifacts:
            - Name: SpaSourceCode
          RunOrder: 1
